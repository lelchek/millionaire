{"version":3,"sources":["images/logoXl.png","context/TotalScore.js","pages/DefaultPage/index.jsx","pages/DefaultPage/DefaultPage.jsx","components/Blank/index.jsx","components/Blank/Blank.jsx","components/Answers/index.jsx","components/Answers/Answers.jsx","components/Board/index.jsx","components/Board/Board.jsx","helpers/validateQuestions.js","helpers/createArrAnswers.js","pages/GamePage/index.jsx","pages/GamePage/GamePage.jsx","helpers/createObjQuestions.js","helpers/getRandomIndex.js","components/Logo/index.jsx","components/Logo/Logo.jsx","components/Button/index.jsx","components/Button/Button.jsx","pages/StartPage/index.jsx","pages/StartPage/StartPage.jsx","pages/WinnerPage/index.jsx","pages/WinnerPage/WinnerPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TotalScoreContext","createContext","TotalScoreProvider","children","useState","value","state","setState","Provider","DefaultPage","Blank","text","style","border","Answers","arrAnswers","setResult","useEffect","console","log","map","item","index","key","onClick","truth","Board","arrGrades","currentGradeIndex","validateAnswers","arr","length","isAnswerTrue","filter","find","isAnswerFalse","randomSort","j","temp","i","Math","floor","random","findAnswerTrue","findAnswersFalse","allAnswerFalse","GamePage","stopGame","setStopGame","objQuestions","setObjQuestions","setArrGrades","setCurrentGradeIndex","gradeQuestions","setGradeQuestions","randomQuestion","setRandomQuestion","textQuestion","setTextQuestion","setArrAnswers","currentScore","setCurrentScore","useContext","setTotalScoreState","tempObj","forEach","cost","createObjQuestions","question","answers","isNaN","validateQuestions","data","grades","Object","keys","Number","sort","a","b","rand","maxValue","randomIndex","arrSort","answerTrue","answersFalse","createArrAnswers","to","result","Logo","src","logoXl","alt","Button","handleClick","StartPage","isStart","setIsStart","WinnerPage","isTryAgain","setIsTryAgain","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8oGAAAA,EAAOC,QAAU,IAA0B,oC,uLCE9BC,EAAoBC,wBAAc,CAAC,GAAI,eAEvCC,EAAqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACtBC,mBAAS,CAC/BC,MAAO,IAFqC,mBACzCC,EADyC,KAClCC,EADkC,KAKhD,OACI,kBAACP,EAAkBQ,SAAnB,CAA4BH,MAAO,CAACC,EAAOC,IACtCJ,ICTEM,MCAA,WACb,OAAO,yC,QCDMC,MCAA,YAA0B,IAATC,EAAQ,EAARA,KAC9B,OAAO,yBAAKC,MAAO,CAAEC,OAAQ,oBAAsBF,ICDtCG,MCCA,YAA6C,IAA1BC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,UAK5C,OAJAC,qBAAU,WACRC,QAAQC,IAAI,aAAcJ,KAEzB,CAACA,IAEF,6BACGA,EAAWK,KAAI,SAACC,EAAMC,GAAP,OACd,yBAAKC,IAAKD,EAAOE,QAAS,kBAAMR,EAAUK,EAAKI,SAC5CJ,EAAKV,SAGV,kBAAC,EAAD,QCbSe,MCCA,YAAkD,IAAjCC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,kBACzC,OACE,oCACE,6BACGD,EAAUP,KAAI,SAACC,GAAD,OACb,yBAAKE,IAAKF,GAAOA,OAGrB,kBAAC,EAAD,MACA,6BAAMM,EAAUC,M,OCatB,SAASC,IAA2B,IAAXC,EAAU,uDAAJ,GAC3B,IAAKA,EAAIC,OACL,OAAO,EAGX,IAAMC,EAAeF,EAAIG,QAAO,SAACZ,GAAD,OAAUA,EAAKI,SAC1CS,MAAK,SAAAb,GAAI,OAAIA,EAAKV,QACjBwB,EAAgBL,EAAIG,QAAO,SAACZ,GAAD,OAAWA,EAAKI,SAC5CS,MAAK,SAAAb,GAAI,OAAIA,EAAKV,QAEvB,SAAIqB,IAAgBG,GCtBxB,SAASC,IAAsB,IACvBC,EACAC,EAFYR,EAAU,uDAAJ,GAItB,IAAKA,EAAIC,OACL,OAAOD,EAGX,IAAK,IAAIS,EAAIT,EAAIC,OAAS,EAAGQ,EAAI,EAAGA,IAEhCD,EAAOR,EADPO,EAAIG,KAAKC,MAAMD,KAAKE,UAAYH,EAAI,KAEpCT,EAAIO,GAAKP,EAAIS,GACbT,EAAIS,GAAKD,EAGb,OAAOR,EAGX,SAASa,IAA0B,IAAXb,EAAU,uDAAJ,GAC1B,GAAKA,EAAIC,OAIT,OAAOD,EAAII,MAAK,SAACb,GAAD,OAAUA,EAAKI,SAGnC,SAASmB,IAA4B,IAAXd,EAAU,uDAAJ,GAC5B,IAAKA,EAAIC,OACL,OAAOD,EAMX,IAHA,IAAMe,EAAiBf,EAAIG,QAAO,SAACZ,GAAD,OAAWA,EAAKI,SAC9Ca,EAAO,GAEFC,EAAI,EAAGA,EAAI,GACXM,EAAeN,GADDA,IAKnBD,EAAI,sBAAOA,GAAP,CAAaO,EAAeN,KAGpC,OAAOD,E,YCrDIQ,MCUA,WAAqB,IAAD,EACD1C,oBAAS,GADR,mBAC1B2C,EAD0B,KAChBC,EADgB,OAEO5C,mBAAS,MAFhB,mBAE1B6C,EAF0B,KAEZC,EAFY,OAGC9C,mBAAS,IAHV,mBAG1BuB,EAH0B,KAGfwB,EAHe,OAIiB/C,mBAAS,GAJ1B,mBAI1BwB,EAJ0B,KAIPwB,EAJO,OAKWhD,mBAAS,IALpB,mBAK1BiD,EAL0B,KAKVC,EALU,OAMWlD,mBAAS,MANpB,mBAM1BmD,EAN0B,KAMVC,EANU,OAOOpD,mBAAS,MAPhB,mBAO1BqD,EAP0B,KAOZC,EAPY,OAQGtD,mBAAS,IARZ,mBAQ1BW,EAR0B,KAQd4C,EARc,OASOvD,mBAAS,GAThB,mBAS1BwD,EAT0B,KASZC,EATY,OAUFC,qBAAW9D,GAAjC+D,EAVwB,oBAwEjC,OA5DA9C,qBAAU,WACR,IACM+C,EC1BK,WAAuC,IAAXlC,EAAU,uDAAJ,GACvCQ,EAAO,GAEb,OAAKR,EAAIC,QAITD,EAAImC,SAAQ,SAAC5C,GACJiB,EAAKjB,EAAK6C,QACX5B,EAAKjB,EAAK6C,MAAQ,IAEtB5B,EAAKjB,EAAK6C,MAAV,sBAAsB5B,EAAKjB,EAAK6C,OAAhC,CAAuC7C,OAGpCiB,GAVIA,EDsBK6B,CH1BL,WAAsC,IAAXrC,EAAU,uDAAJ,GACxCQ,EAAO,GAEX,OAAKR,EAAIC,QAITD,EAAImC,SAAQ,SAAA5C,GAAS,IACT6C,EAA4B7C,EAA5B6C,KAAME,EAAsB/C,EAAtB+C,SAAUC,EAAYhD,EAAZgD,QACpBC,MAAMJ,IAGLE,GAGAvC,EAAgBwC,KAIrB/B,EAAI,sBAAOA,GAAP,CAAajB,QAGdiB,GAlBIA,EGqBUiC,CAAkBC,IAEvCtB,EAAgBc,KACf,IAEH/C,qBAAU,WACR,GAAKgC,EAAL,CAGA,IACMwB,EADOC,OAAOC,KAAK1B,GACL7B,KAAI,SAACC,GAAD,OAAUuD,OAAOvD,MAAOwD,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACnE5B,EAAasB,GACbnB,EAAkBL,EAAawB,EAAO,QACrC,CAACxB,IAEJhC,qBAAU,WACR,GAAKoC,EAAetB,OAApB,CAGA,IAAIT,EAAQ,EACR+B,EAAetB,OAAS,IAC1BT,EE9CS,WAAoC,IAC3C0D,EAD4BC,EAAc,uDAAH,EAK3C,OAFAD,EAAOxC,KAAKE,SAAWuC,EAEhBzC,KAAKC,MAAMuC,GFyCRE,CAAY7B,EAAetB,SAErCyB,EAAkBH,EAAe/B,OAChC,CAAC+B,IAEJpC,qBAAU,WACR,GAAKsC,EAAL,CADc,IAKNa,EAAsBb,EAAtBa,SAAUC,EAAYd,EAAZc,QAElBX,EAAgBU,GAChBT,EF3DW,WAAqC,IAAX7B,EAAU,uDAAJ,GAC3C,IAAKA,EAAIC,OACL,OAAOD,EAGX,IAAMqD,EAAU/C,EAAWN,GACrBsD,EAAazC,EAAewC,GAC5BE,EAAezC,EAAiBuC,GAChC7C,EAAI,sBAAO+C,GAAP,CAAqBD,IAE/B,OAAOhD,EAAWE,GEiDJgD,CAAiBjB,OAC9B,CAACd,IAwBAR,EACK,kBAAC,IAAD,CAAUwC,GAAG,SAIpB,6BACE,6BACE,2BAAI9B,GACJ,kBAAC,EAAD,CAASzC,UA9Bf,SAAmBwE,GACjB,IAAKA,EAMH,OALAxC,GAAY,QACZe,GAAmB,SAACzD,GAAD,mBAAC,eACfA,GADc,IAEjBD,MAAOuD,OAIPhC,EAAoB,EAAID,EAAUI,QACpC8B,EAAgBlC,EAAUC,IAC1B0B,EAAkBL,EAAatB,EAAUC,EAAoB,KAC7DwB,EAAqBxB,EAAoB,KAEzCoB,GAAY,GACZe,GAAmB,SAACzD,GAAD,mBAAC,eACfA,GADc,IAEjBD,MAAOsB,EAAUC,UAacb,WAAYA,KAE7C,6BACE,kBAAC,EAAD,CAAOY,UAAWA,EAAWC,kBAAmBA,O,iBG7FzC6D,MCCA,WACb,OACE,oCACE,yBAAKC,IAAKC,IAAQC,IAAI,WCHbC,MCDA,YAAwC,IAAtBlF,EAAqB,EAArBA,KAAMmF,EAAe,EAAfA,YACrC,OAAO,4BAAQtE,QAASsE,GAAcnF,ICDzBoF,MCGA,WAAsB,IAAD,EACJ3F,oBAAS,GADL,mBAC3B4F,EAD2B,KAClBC,EADkB,KAMlC,OAAID,EACK,kBAAC,IAAD,CAAUT,GAAG,UAIpB,6BACE,kBAAC,EAAD,MACA,6BACE,iEACA,kBAAC,EAAD,CAAQ5E,KAAK,QAAQmF,YAb3B,WACEG,GAAW,SCNAC,MCIA,WAAuB,IAAD,EACC9F,oBAAS,GADV,mBAC5B+F,EAD4B,KAChBC,EADgB,OAEftC,qBAAW9D,GAAtBK,EAF0B,oBAE1BA,MAUT,OAJAY,qBAAU,cAEP,IAECkF,EACK,kBAAC,IAAD,CAAUZ,GAAG,UAGpB,6BACE,kBAAC,EAAD,MACA,6BACE,4CACA,+BACG,8BAAOlF,GADV,WAGA,kBAAC,EAAD,CAAQM,KAAK,YAAYmF,YAnB/B,WACEM,GAAc,S,MCFH,SAASC,IACtB,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWT,IACjC,kBAAC,IAAD,CAAOO,KAAK,SAASE,UAAWT,IAChC,kBAAC,IAAD,CAAOO,KAAK,QAAQE,UAAW1D,IAC/B,kBAAC,IAAD,CAAOwD,KAAK,OAAOE,UAAWN,IAC9B,kBAAC,IAAD,CAAOM,UAAW/F,MCLNgG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxG,QAAQwG,MAAMA,EAAMC,c","file":"static/js/main.b778e6f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoXl.3e2e3523.png\";","import React, { createContext, useState } from 'react';\r\n\r\nexport const TotalScoreContext = createContext([{}, () => { }])\r\n\r\nexport const TotalScoreProvider = ({ children }) => {\r\n    const [state, setState] = useState({\r\n        value: 0\r\n    });\r\n\r\n    return (\r\n        <TotalScoreContext.Provider value={[state, setState]}>\r\n            {children}\r\n        </TotalScoreContext.Provider>\r\n    );\r\n}","import DefaultPage from './DefaultPage'\r\n\r\nexport default DefaultPage\r\n","import React from 'react'\r\n\r\nexport default function DefaultPage() {\r\n  return <div>default</div>\r\n}\r\n","import Blank from './Blank'\r\n\r\nexport default Blank\r\n","import React from 'react'\r\n\r\nexport default function Blank({ text }) {\r\n  return <div style={{ border: '1px solid black' }}>{text}</div>\r\n}\r\n","import Answers from './Answers'\r\n\r\nexport default Answers\r\n","import React, { useEffect } from 'react'\r\nimport Blank from '../Blank'\r\n\r\nexport default function Answers({ arrAnswers, setResult }) {\r\n  useEffect(() => {\r\n    console.log('arrAnswers', arrAnswers)\r\n    // createArrAnswers()\r\n  }, [arrAnswers])\r\n  return (\r\n    <div>\r\n      {arrAnswers.map((item, index) => (\r\n        <div key={index} onClick={() => setResult(item.truth)}>\r\n          {item.text}\r\n        </div>\r\n      ))}\r\n      <Blank />\r\n    </div>\r\n  )\r\n}\r\n","import Board from './Board'\r\n\r\nexport default Board\r\n","import React from 'react'\r\nimport Blank from '../Blank'\r\n\r\nexport default function Board({ arrGrades, currentGradeIndex }) {\r\n  return (\r\n    <>\r\n      <div>\r\n        {arrGrades.map((item) => (\r\n          <div key={item}>{item}</div>\r\n        ))}\r\n      </div>\r\n      <Blank />\r\n      <div>{arrGrades[currentGradeIndex]}</div>\r\n    </>\r\n  )\r\n}\r\n","export default function validateQuestions(arr = []) {\r\n    let temp = [];\r\n\r\n    if (!arr.length) {\r\n        return temp;\r\n    }\r\n\r\n    arr.forEach(item => {\r\n        const { cost, question, answers } = item\r\n        if (isNaN(cost)) {\r\n            return;\r\n        }\r\n        if (!question) {\r\n            return;\r\n        }\r\n        if (!validateAnswers(answers)) {\r\n            return;\r\n        }\r\n\r\n        temp = [...temp, item];\r\n    });\r\n\r\n    return temp;\r\n}\r\n\r\nfunction validateAnswers(arr = []) {\r\n    if (!arr.length) {\r\n        return false;\r\n    }\r\n\r\n    const isAnswerTrue = arr.filter((item) => item.truth)\r\n        .find(item => item.text);\r\n    const isAnswerFalse = arr.filter((item) => !item.truth)\r\n        .find(item => item.text);\r\n\r\n    if (isAnswerTrue && isAnswerFalse) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n","export default function createArrAnswers(arr = []) {\r\n    if (!arr.length) {\r\n        return arr;\r\n    }\r\n\r\n    const arrSort = randomSort(arr);\r\n    const answerTrue = findAnswerTrue(arrSort);\r\n    const answersFalse = findAnswersFalse(arrSort);\r\n    const temp = [...answersFalse, answerTrue];\r\n\r\n    return randomSort(temp);\r\n}\r\n\r\nfunction randomSort(arr = []) {\r\n    let j;\r\n    let temp;\r\n\r\n    if (!arr.length) {\r\n        return arr;\r\n    }\r\n\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n        j = Math.floor(Math.random() * (i + 1));\r\n        temp = arr[j];\r\n        arr[j] = arr[i];\r\n        arr[i] = temp;\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nfunction findAnswerTrue(arr = []) {\r\n    if (!arr.length) {\r\n        return;\r\n    }\r\n\r\n    return arr.find((item) => item.truth);\r\n}\r\n\r\nfunction findAnswersFalse(arr = []) {\r\n    if (!arr.length) {\r\n        return arr;\r\n    }\r\n\r\n    const allAnswerFalse = arr.filter((item) => !item.truth);\r\n    let temp = [];\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n        if (!allAnswerFalse[i]) {\r\n            break;\r\n        }\r\n\r\n        temp = [...temp, allAnswerFalse[i]];\r\n    }\r\n\r\n    return temp;\r\n}\r\n","import GamePage from './GamePage'\r\n\r\nexport default GamePage\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { TotalScoreContext } from '../../context/TotalScore'\r\nimport Answers from '../../components/Answers'\r\nimport Board from '../../components/Board'\r\nimport validateQuestions from '../../helpers/validateQuestions'\r\nimport createObjQuestions from '../../helpers/createObjQuestions'\r\nimport randomIndex from '../../helpers/getRandomIndex'\r\nimport createArrAnswers from '../../helpers/createArrAnswers'\r\n\r\nimport data from '../../data/questions.json'\r\n\r\nexport default function GamePage() {\r\n  const [stopGame, setStopGame] = useState(false) //редирект\r\n  const [objQuestions, setObjQuestions] = useState(null) //старт\r\n  const [arrGrades, setArrGrades] = useState([]) //борд\r\n  const [currentGradeIndex, setCurrentGradeIndex] = useState(0) //борд\r\n  const [gradeQuestions, setGradeQuestions] = useState([])\r\n  const [randomQuestion, setRandomQuestion] = useState(null) //текущий вопрос для локала\r\n  const [textQuestion, setTextQuestion] = useState(null) //тег p\r\n  const [arrAnswers, setArrAnswers] = useState([]) //вопросы\r\n  const [currentScore, setCurrentScore] = useState(0) //просчет суммы\r\n  const [, setTotalScoreState] = useContext(TotalScoreContext) //контекст\r\n\r\n  useEffect(() => {\r\n    const tempValidate = validateQuestions(data)\r\n    const tempObj = createObjQuestions(tempValidate)\r\n    setObjQuestions(tempObj)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!objQuestions) {\r\n      return\r\n    }\r\n    const keys = Object.keys(objQuestions)\r\n    const grades = keys.map((item) => Number(item)).sort((a, b) => a - b)\r\n    setArrGrades(grades)\r\n    setGradeQuestions(objQuestions[grades[0]])\r\n  }, [objQuestions])\r\n\r\n  useEffect(() => {\r\n    if (!gradeQuestions.length) {\r\n      return\r\n    }\r\n    let index = 0\r\n    if (gradeQuestions.length > 1) {\r\n      index = randomIndex(gradeQuestions.length)\r\n    }\r\n    setRandomQuestion(gradeQuestions[index])\r\n  }, [gradeQuestions])\r\n\r\n  useEffect(() => {\r\n    if (!randomQuestion) {\r\n      return\r\n    }\r\n\r\n    const { question, answers } = randomQuestion\r\n\r\n    setTextQuestion(question)\r\n    setArrAnswers(createArrAnswers(answers))\r\n  }, [randomQuestion])\r\n\r\n  function setResult(result) {\r\n    if (!result) {\r\n      setStopGame(true)\r\n      setTotalScoreState((state) => ({\r\n        ...state,\r\n        value: currentScore,\r\n      }))\r\n      return\r\n    }\r\n    if (currentGradeIndex + 1 < arrGrades.length) {\r\n      setCurrentScore(arrGrades[currentGradeIndex])\r\n      setGradeQuestions(objQuestions[arrGrades[currentGradeIndex + 1]])\r\n      setCurrentGradeIndex(currentGradeIndex + 1)\r\n    } else {\r\n      setStopGame(true)\r\n      setTotalScoreState((state) => ({\r\n        ...state,\r\n        value: arrGrades[currentGradeIndex],\r\n      }))\r\n    }\r\n  }\r\n\r\n  if (stopGame) {\r\n    return <Redirect to=\"/win\" />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>{textQuestion}</p>\r\n        <Answers setResult={setResult} arrAnswers={arrAnswers} />\r\n      </div>\r\n      <div>\r\n        <Board arrGrades={arrGrades} currentGradeIndex={currentGradeIndex} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export default function createObjQuestions(arr = []) {\r\n    const temp = {};\r\n\r\n    if (!arr.length) {\r\n        return temp;\r\n    }\r\n\r\n    arr.forEach((item) => {\r\n        if (!temp[item.cost]) {\r\n            temp[item.cost] = [];\r\n        }\r\n        temp[item.cost] = [...temp[item.cost], item];\r\n    });\r\n\r\n    return temp;\r\n}\r\n","export default function randomIndex(maxValue = 0) {\r\n    let rand;\r\n\r\n    rand = Math.random() * maxValue;\r\n\r\n    return Math.floor(rand);\r\n}\r\n","import Logo from './Logo'\r\n\r\nexport default Logo\r\n","import React from 'react'\r\nimport logoXl from '../../images/logoXl.png'\r\n\r\nexport default function Logo() {\r\n  return (\r\n    <>\r\n      <img src={logoXl} alt=\"logo\" />\r\n    </>\r\n  )\r\n}\r\n","// export * from './Button.jsx'\r\nimport Button from './Button'\r\n\r\nexport default Button\r\n","import React from 'react'\r\n\r\nexport default function Button({ text, handleClick }) {\r\n  return <button onClick={handleClick}>{text}</button>\r\n}\r\n","import StartPage from './StartPage'\r\n\r\nexport default StartPage\r\n","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Logo from '../../components/Logo'\r\nimport Button from '../../components/Button'\r\n\r\nexport default function StartPage() {\r\n  const [isStart, setIsStart] = useState(false)\r\n  function handleClick() {\r\n    setIsStart(true)\r\n  }\r\n\r\n  if (isStart) {\r\n    return <Redirect to=\"/game\" />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Logo />\r\n      <div>\r\n        <h1>Who wants to be a millionaire?</h1>\r\n        <Button text=\"Start\" handleClick={handleClick} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import WinnerPage from './WinnerPage'\r\n\r\nexport default WinnerPage\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { TotalScoreContext } from '../../context/TotalScore'\r\nimport Logo from '../../components/Logo'\r\nimport Button from '../../components/Button'\r\n\r\nexport default function WinnerPage() {\r\n  const [isTryAgain, setIsTryAgain] = useState(false)\r\n  const [{ value }] = useContext(TotalScoreContext)\r\n\r\n  function handleClick() {\r\n    setIsTryAgain(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log('totalScoreState', totalScoreState.value)\r\n  }, [])\r\n\r\n  if (isTryAgain) {\r\n    return <Redirect to=\"/game\" />\r\n  }\r\n  return (\r\n    <div>\r\n      <Logo />\r\n      <div>\r\n        <h1>Total score:</h1>\r\n        <p>\r\n          $<span>{value}</span> earned\r\n        </p>\r\n        <Button text=\"Try Again\" handleClick={handleClick} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { TotalScoreProvider } from './context/TotalScore'\nimport DefaultPage from './pages/DefaultPage'\nimport GamePage from './pages/GamePage'\nimport StartPage from './pages/StartPage'\nimport WinnerPage from './pages/WinnerPage'\nimport './App.css';\n\nexport default function App() {\n  return (\n    <TotalScoreProvider>\n      <Switch>\n        <Route path=\"/\" exact component={StartPage} />\n        <Route path=\"/start\" component={StartPage} />\n        <Route path=\"/game\" component={GamePage} />\n        <Route path=\"/win\" component={WinnerPage} />\n        <Route component={DefaultPage} />\n      </Switch>\n    </TotalScoreProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}